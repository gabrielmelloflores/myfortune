spring.profiles.active=@activatedProperties@
spring.threads.virtual.enabled=true

server.port=8090
server.forward-headers-strategy=framework

api.title=PetConnect - API
api.version=v1.0.0
api.description=API do PetConnect
api.jwt.secret=${API_JWT_SECRET}

app.name=Pet Connect
app.mail=notifica@seupetconnect.com.br
app.url.confirma.usuario=https://petconnect.avmb.com.br/#/cadastroSucesso
app.url.recupera.senha=https://petconnect.avmb.com.br
app.url.compartilha.pet=https://petconnect.avmb.com.br
app.url.platafoma.download=https://petconnect.avmb.com.br
app.url.assinatura.revisar=https://petconnect.avmb.com.br

# swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/petconnect-api.html
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.urlsPrimaryName=api-auth
springdoc.packagesToScan=com.gabrielflores.myfortune.controller
springdoc.swagger-ui.persistAuthorization=true
#springdoc.pathsToMatch=

# Hibernate Envers
spring.jpa.properties.org.hibernate.envers.default_schema=audit
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_revisions
spring.jpa.properties.org.hibernate.envers.revision_field_name=revision_id
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=revision_type

# Redis configuration
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

redis.data.expiration=30
redis.stream.key=myfortune
redis.stream.group=myfortune_group
redis.stream.consumer=myfortune_consumer

# DB configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA configuration
spring.jpa.open-in-view=true
spring.jpa.show-sql=true

# Flyway configuration
spring.flyway.enabled=${FLYWAY_ENABLED}
spring.flyway.baselineOnMigrate=${FLYWAY_BASELINE_ON_MIGRATE}
spring.flyway.validateOnMigrate=${FLYWAY_VALIDATE_ON_MIGRATE}
spring.flyway.validateMigrationNaming=${FLYWAY_VALIDATE_MIGRATION_NAMING}
spring.flyway.locations=${FLYWAY_LOCATIONS}

# # Spring email
# spring.mail.host=${MAIL_HOST}
# spring.mail.port=${MAIL_PORT}
# spring.mail.username=${MAIL_USERNAME}
# spring.mail.password=${MAIL_PASSWORD}
# spring.mail.properties.mail.smtp.ssl.enable=true
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.auth.login.disable=true
# spring.mail.properties.mail.smtp.connectiontimeout=5000
# spring.mail.properties.mail.smtp.timeout=5000
# spring.mail.properties.mail.smtp.writetimeout=5000
# spring.mail.properties.mail.smtp.starttls.enable=true
# spring.mail.properties.mail.smtp.starttls.required=true
# spring.mail.properties.mail.smtp.socketFactory.port=465
# spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

# Slf4j (log)
logging.level.web=DEBUG
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS,America/Sao_Paulo


#ngrok cria https e deixar localhost acessi\u00advel publicamente. Usar somente em ambiente de teste
ngrok.enabled=false

# #Integracao PagSeguro


